<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Access" xml:space="preserve">
    <value>Access</value>
    <comment>Subsection header</comment>
  </data>
  <data name="AddCategory" xml:space="preserve">
    <value>Add Category</value>
    <comment>Texto para botão/adicionar nova categoria</comment>
  </data>
  <data name="AddCategoryTitle" xml:space="preserve">
    <value>Add Category</value>
    <comment>Título da página de adição de categoria</comment>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
    <comment>Contact address</comment>
  </data>
  <data name="CategoryTitle" xml:space="preserve">
    <value>Category</value>
    <comment>Título da página de categoria</comment>
  </data>
  <data name="ChangesToPrivacyPolicy" xml:space="preserve">
    <value>Changes to This Privacy Policy</value>
    <comment>Section header</comment>
  </data>
  <data name="ConfirmDeletion" xml:space="preserve">
    <value>Confirm Deletion</value>
    <comment>Texto para botão/confirmar exclusão</comment>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
    <comment>Section header</comment>
  </data>
  <data name="Cookies" xml:space="preserve">
    <value>Cookies</value>
    <comment>Subsection header</comment>
  </data>
  <data name="Correct" xml:space="preserve">
    <value>Correct</value>
    <comment>Subsection header</comment>
  </data>
  <data name="CustomerSupport" xml:space="preserve">
    <value>Customer Support</value>
    <comment>Feature: customer support</comment>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
    <comment>Subsection header</comment>
  </data>
  <data name="DeleteCategoryConfirm" xml:space="preserve">
    <value>Really want to delete the category? ({0})</value>
    <comment>Mensagem de confirmação para exclusão de categoria (o {0} será 	Mensagem de confirmação para exclusão de categoria (o {0} será substituído pelo nome da categoria)</comment>
  </data>
  <data name="DeleteCategoryTitle" xml:space="preserve">
    <value>Confirmation delete category</value>
    <comment>Título da página de confirmação de exclusão de categoria</comment>
  </data>
  <data name="EditCategory" xml:space="preserve">
    <value>Edit</value>
    <comment>Texto para botão/editar categoria</comment>
  </data>
  <data name="EditCategoryTitle" xml:space="preserve">
    <value>Edit Category</value>
    <comment>Título da página de edição de categoria</comment>
  </data>
  <data name="EffectiveDate" xml:space="preserve">
    <value>Effective Date</value>
    <comment>Effective date of the privacy policy</comment>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
    <comment>Contact email address</comment>
  </data>
  <data name="ExploreProducts" xml:space="preserve">
    <value>Explore Products</value>
    <comment>Button text to explore products</comment>
  </data>
  <data name="FastDelivery" xml:space="preserve">
    <value>Fast Delivery</value>
    <comment>Feature: fast delivery</comment>
  </data>
  <data name="HowWeUseInformation" xml:space="preserve">
    <value>How We Use Information</value>
    <comment>Section header</comment>
  </data>
  <data name="InformationSecurity" xml:space="preserve">
    <value>Information Security</value>
    <comment>Section header</comment>
  </data>
  <data name="InformationSharing" xml:space="preserve">
    <value>Information Sharing</value>
    <comment>Section header</comment>
  </data>
  <data name="InformationWeCollect" xml:space="preserve">
    <value>Information We Collect</value>
    <comment>Section header</comment>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
    <comment>Label for language selection</comment>
  </data>
  <data name="LegalRequirements" xml:space="preserve">
    <value>Legal Requirements</value>
    <comment>Subsection header</comment>
  </data>
  <data name="ListCategory" xml:space="preserve">
    <value>List Categories</value>
    <comment>Título para listagem de categorias</comment>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
    <comment>Login link</comment>
  </data>
  <data name="NavigationInformation" xml:space="preserve">
    <value>Navigation Information</value>
    <comment>Subsection header</comment>
  </data>
  <data name="OptOut" xml:space="preserve">
    <value>Opt-out</value>
    <comment>Subsection header</comment>
  </data>
  <data name="PersonalInformation" xml:space="preserve">
    <value>Personal Information</value>
    <comment>Subsection header</comment>
  </data>
  <data name="Portability" xml:space="preserve">
    <value>Portability</value>
    <comment>Subsection header</comment>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Privacy Policy</value>
    <comment>Privacy policy link</comment>
  </data>
  <data name="QualityProducts" xml:space="preserve">
    <value>Quality Products</value>
    <comment>Feature: quality products</comment>
  </data>
  <data name="Restrict" xml:space="preserve">
    <value>Restrict</value>
    <comment>Subsection header</comment>
  </data>
  <data name="ServiceProviders" xml:space="preserve">
    <value>Service Providers</value>
    <comment>Subsection header</comment>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Home Page</value>
    <comment>Title of the home page</comment>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>Welcome to MarketExpress!</value>
  </data>
  <data name="WelcomeMessage1" xml:space="preserve">
    <value>Welcome to MarketExpress</value>
    <comment>Welcome message displayed on the home page</comment>
  </data>
  <data name="WhyChooseMarketExpress" xml:space="preserve">
    <value>Why choose MarketExpress?</value>
    <comment>Section header</comment>
  </data>
  <data name="YourRights" xml:space="preserve">
    <value>Your Rights</value>
    <comment>Section header</comment>
  </data>
</root>